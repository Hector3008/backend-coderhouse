{{!-- este .handlebar trabaja con la ruta /products/home.handlebars --}}

<div class="container">
  <h2 id="cart" value="{{cart}}">Carrito</h2>
  <div class="container d-flex justify-content-end" style="margin-top: 1rem;">
    <button class="btn btn-danger" style="margin-right: 1rem;" onclick="vaciarCarro('{{cart}}')">vaciar carrito</button>
    <button class="btn btn-success" id="checkout">checkout</button>
  </div>


  <table class="table table-striped">

    <table class="table table-striped">
      <thead>
        <tr>
          <td></td>
          <td><strong>producto</strong></td>
          <td><strong>precio</strong></td>
          <td><strong>cantidad</strong></td>
        </tr>
      </thead>

      <tbody id="tBodyCartProducts">

        {{#each products}}

        <tr>
          <td><button class="deleteProductBtn btn btn-danger" data-product-id="{{this.product._id}}">delete</button>
          </td>
          <td><a href="http://localhost:8080/product/{{this.product._id}}">{{this.product.title}}</a></td>
          <td>{{this.product.price}}$</td>
          <td>{{this.quantity}}</td>
        </tr>
        {{/each}}
      </tbody>

    </table>
</div>
</table>
</div>

<script src="/socket.io/socket.io.js"></script>
<script>
  const socket = io();
  const cid = document.getElementById("cart").getAttribute("value")
  const cleanTable = () => {
    const tBodyCartProducts = document.getElementById("tBodyCartProducts")
    tBodyCartProducts.innerHTML = "<div style='text-align: center' ><p>you have an empty cart</p></div>"
  }

  const loadDeleteButtons = () => {
    const buttons = document.querySelectorAll(".deleteProductBtn")
    buttons.forEach((button) => {
      button.addEventListener("click", (e) => {
        e.preventDefault()
        const productId = button.getAttribute("data-product-id")
        deleteProductFromCart(productId, cid)
      })
    })
  }
  const vaciarCarro = async (cid) => {

    await fetch(`/api/carts/${cid}`, {
      method: "delete"
    })
      .then((result) => result.json())
      .then((result) => {
        console.log("result1: ", result)
        if (result.status === "error") throw new Error(result.error);
        alert(
          `el  carrito se ha vaciado con éxito!`
        )
        cleanTable()
      })
      .catch((err) => alert(`Ocurrió un error :(\n${err}`))
  }

  const deleteProductFromCart = async (pid, cid) => {
    await fetch(`/api/carts/${cid}/product/${pid}`, {
      method: "delete",
    }).then(result => result.json())
      .then(result => {
        socket.emit("cartProductsList", result.payload.products)
      })
  }
  socket.on("UpdatedCart", (data) => {

    const tBodyCartProducts = document.getElementById("tBodyCartProducts")
    tBodyCartProducts.innerHTML = ""

    for (product of data) {

      let tr = document.createElement("tr");
      tr.innerHTML = `
          <td><button class="deleteProductBtn btn btn-danger" data-product-id="${product.product._id}">delete</button>
          </td>
          <td><a href="http://localhost:8080/product/${product.product._id}">${product.product.title}</a></td>
          <td>${product.product.price}$</td>
          <td>${product.quantity}</td>
          `
      tBodyCartProducts.appendChild(tr);
    }

    loadDeleteButtons()
  });
  loadDeleteButtons()

</script>
<script>
  const button = document.getElementById('checkout')
  button.addEventListener('click', async (e) => {
    console.log("listener activated")
    const res = await fetch('/api/checkout/stripe', {
      method: 'POST'
    })
    const data = await res.json()
    window.location.href = data.url
  })
</script>